/*WAQTD NUMBER OF EMPLOYEES OF WORKING IN
EACH DEPTNO IF THERE ARE ALEAST 3 EMPLOYEES
WORKING IN EACH DEPTNO
HAVING CLAUSE:
"IT IS USED TO FILTER THE GROUPS"
->MRF() CAN BE WRITTEN ONLY IN HAVING CLAUSE.
->HAVING CLAUSE WILL ALWAYS EXCEUTE AFTER
GROUP BY CLAUSE
->HAVING CLAUSE WILL EXECUTE GROUP BY GROUP
SYNTAX:
SELECT GROUP FUNCTION/GROUP BY EXPRESSION
FROM TABLE_NAME
[WHERE <FILTER CONDITION>]
GROUP BY COLUMN_NAME/EXPRESSION
HAVING <FILTER_GROUP_CONDITION>;
*/
USE EXCELR01;
SELECT COUNT(*),DEPTNO
FROM EMP
GROUP BY DEPTNO
HAVING COUNT(*)>=6;
/*WAQTD NUMBER OF EMPLOYEES WORKING IN EACH
DEPTNO IF THERE ATLEAST 4 EMPLOYEES WORKING
IN EACH DEPTNO EXCEPT ANALYST*/
SELECT COUNT(*),DEPTNO,JOB
FROM emp
WHERE JOB!='ANALYST'
GROUP BY DEPTNO,JOB
HAVING COUNT(*)>=4;
/*WAQTD NUMBER OF EMPLOYEES WORKING IN EACH
DEPTNO.IF MAXIMUM SALARY GIVEN TO EACH
DEPTNO IS MORE THAN 3000*/
SELECT MAX(SAL),DEPTNO
FROM EMP
GROUP BY DEPTNO
HAVING MAX(SAL)>3000;
/*WAQTD SALARY WHICH IS REPETED/DUPLICATED*/
SELECT SAL,COUNT(*)
FROM EMP
GROUP BY SAL
HAVING COUNT(*)>1;
/*WAQTD JOBS WHICH ARE REPETED*/
SELECT JOB,COUNT(*)
FROM EMP
GROUP BY JOB
HAVING COUNT(*)>1;

/*WAQTD TOTALSALARY GIVEN EACH JOB
IF TOTAL SALARY IS MORE THAN 15000*/
SELECT SUM(SAL),JOB
FROM emp
GROUP BY JOB
HAVING SUM(SAL)>15000;

SELECT MAX(SAL),MIN(SAL),AVG(SAL),
count(*),HIREDATE
FROM EMP
WHERE JOB='PRESIDENT'
GROUP BY HIREDATE;

SELECT COUNT(*),ENAME
FROM EMP
WHERE ENAME LIKE '%LL%'
GROUP BY ENAME;
/*TRANSACTION CONTROL LANGUAGE(TCL):
"IT IS USED TO CONTROL FLOW TRANSACTIONS
DONE IN DATABASE.
->IT HAS 3 STATEMENTS
1)COMMIT:IT IS USED TO SAVE THE TRANSACTIONS
INTO DATABASE.
2)ROLLBACK:
"IT WILL BRING TO THE POINT WHERE YOU HAVE 
BEEN USED THE WORD COMMIT LAST TIME".
->IT IS USED TO OBTAIN SAVED DATA FROM 
DATABASE
3)SAVEPOINT:
->IT IS NOT RELATED TO DATABASE
->IT IS USED TO MARK THE POSTION OR RESTORATION OF 
POINTS.*/
SELECT *
FROM STUDENT;
COMMIT;
SELECT * FROM STUDENT;
commit;
DELETE FROM STUDENT;
select * from student;
rollback;
SET AUTOCOMMIT=OFF;
select *
from emp;
commit;
delete from emp;
select * from emp;
rollback;




select *
from  emp;
commit;

delete from emp where deptno=30;
select * from emp;
rollback;
create table A1
(
ENAME VARCHAR(10),
SAL int
);
START transaction;
INSERT INTO A1 VALUES('A',100);
SAVEPOINT S1;
INSERT INTO A1 VALUES('B',200);
INSERT INTO A1 VALUES('C',300);
SAVEPOINT S2;
INSERT INTO A1 VALUES('D',400);
SELECT * FROM A1;
ROLLBACK TO S2;
ROLLBACK TO S1;